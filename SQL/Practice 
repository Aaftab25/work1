
------------------------------------ Practice 1 --------------------------------------------------

create table countries (
	country_id int not null,
  	country_name varchar(25) CHECK(country_name IN('intaly','india','china')),
  	region_id decimal(10,0) not null,
  	constraint uc_countries UNIQUE(country_id,region_id)
);


------------------------------------ Practice 2 --------------------------------------------------


create table job_history (
  employee_id int not null,
  start_date date not null,
  end_date date not null 
  CHECK (end_date Like '--/--/----'),
  job_id int,
  department_id int
  );                  

------------------------------------ Practice 3 --------------------------------------------------

  create table jobs (
  job_id int,
  job_title varchar(20) DEFAULT ' ',
  min_salary int DEFAULT 8000,
  max_salary int DEFAULT NULL
 );


------------------------------------ Practice 4 ----------------------------------------------------

---------------------- Employees Table -------------------
  CREATE TABLE employees (
    employee_id int NOT NULL,
    first_name VARCHAR(25),
    last_name VARCHAR(25),
    email VARCHAR(25),
    phone_number INT,
    hire_date VARCHAR(25),
    job_id INT,
    salary VARCHAR(25),
    commission VARCHAR(25),
    manager_id VARCHAR(25),
    department_id INT,


    PRIMARY KEY(employee_id),
    CONSTRAINT FK_department FOREIGN KEY(department_id) REFERENCES departments(d_id),
    CONSTRAINT FK_jobs FOREIGN KEY(job_id) REFERENCES jobs(id)

);

---------------------- Jobs Table -------------------
CREATE TABLE jobs (
  id int NOT NULL PRIMARY KEY,
  j_name VARCHAR(45),
  skill VARCHAR(50),
  designation VARCHAR(255),
  location VARCHAR(40)

);

---------------------- Department Table -------------------

  CREATE TABLE departments(
    d_id int NOT NULL PRIMARY KEY,
    d_name VARCHAR(20)
  );

---------------------- InSert Data -------------------

  insert into employees values(1, 'Aaftab', 'Shaikh', 'ss@gmail.com',9988776655,'2011-05-12',1001, 24000, 1200, 'm01',101 );
------------------------------------To found second rank --------------------------------------------------

-- to found second rank
SELECT amount FROM (SELECT DENSE_RANK() OVER (order by amount desc)[d_rank], * FROM orders) [tbl_temp] WHERE d_rank = 2



------------------ Drop Table ---------------------------
DROP TABLE [table];


------------------ Select Table ---------------------------
SELECT * FROM [table];








  